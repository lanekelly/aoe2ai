; Firestarter
; Stevenson's Bane

; Based heavily on scripts by BearTheGreat and Promiskuitiv

; Conditions to remember:
; High starting resources
; High population limit (500)
; Should build villagers and militia in parallel and attack!

; ----- Constants -------------------------------------------------------------

(defconst gv-yes 1)
(defconst gv-no 0)

(defconst gv-dark-age 0)
(defconst gv-advancing-to-feudal 1)
(defconst gv-feudal-age 2)
(defconst gv-advancing-to-castle 3)
(defconst gv-castle-age 4)
(defconst gv-advancing-to-imperial 5)
(defconst gv-imperial-age 6)

(defconst max-num-dark-villagers 22)
(defconst max-town-size 60)
(defconst max-dark-rush-barracks 3)

(defconst gv-army-status-idle 1)
(defconst gv-army-status-attacking 2)
(defconst gv-army-status-defending 3)

(defconst gv-army-comp-offensive 1)
(defconst gv-army-comp-defensive 2)

(defconst dark-rush-timer 2)
(defconst scouting-timer 3)
(defconst generic-defend-timer 4)
(defconst increase-town-size-timer 5)
(defconst dark-rush-forward-build-timer 6)

(defconst goal-dark-rush 1)
(defconst goal-max-militia-reached 2)
(defconst goal-age-status 3)
(defconst goal-flood-spearmen 4)
(defconst goal-army-status 6)
(defconst goal-army-composition 7)
(defconst goal-tsa 8)
(defconst goal-ri-queued-blacksmith 9)
(defconst goal-dark-rush-forward-build 10)

(defconst start-dark-rush-militia-count 5)
(defconst end-dark-rush-militia-count 15)

(defconst gv-dr-building 1) ; dark rush states
(defconst gv-dr-rushing 2)
(defconst gv-dr-finished 3)

(defconst gv-drbf-not-started 1) ; dark rush forward build states
(defconst gv-drbf-building 2)
(defconst gv-drbf-built 3)
(defconst gv-drbf-finished 4)

#load-if-defined UP-POCKET-POSITION
(defconst scouting-type position-opposite)
(defconst scout-unlock-time 300)
#else
(defconst scouting-type position-flank)
(defconst scout-unlock-time 180)
#end-if

; Initial state
(defrule
(true)
=>
(set-goal goal-dark-rush gv-dr-building)
(set-goal goal-max-militia-reached gv-no)
(set-goal goal-age-status gv-dark-age)
(set-goal goal-flood-spearmen gv-no)
(set-goal goal-army-status gv-army-status-idle)
(set-goal goal-army-composition gv-army-comp-defensive)
(set-goal goal-tsa gv-no)
(set-goal goal-ri-queued-blacksmith gv-no)
(set-goal goal-dark-rush-forward-build gv-drbf-not-started)
(disable-self))

; -----------------------------------------------------------------------------

; ----- Strategic Numbers -----------------------------------------------------

(defrule
(true)
=>
(set-strategic-number sn-enable-patrol-attack 1)
(set-strategic-number sn-enable-new-building-system 1)
(set-strategic-number sn-cap-civilian-builders 4)
; high value => siege vs buildings, soldier vs soldier
(set-strategic-number sn-target-evaluation-siege-weapon 500)
(set-strategic-number sn-wall-targeting-mode 1)
(disable-self))

(defrule
(true)
=>
(set-strategic-number sn-maximum-food-drop-distance 15)
(set-strategic-number sn-maximum-wood-drop-distance 15)
(set-strategic-number sn-maximum-stone-drop-distance 25)
(set-strategic-number sn-maximum-gold-drop-distance 25)
(set-strategic-number sn-mill-max-distance 15)
(set-strategic-number sn-maximum-hunt-drop-distance 35)
(set-strategic-number sn-enable-boar-hunting 2)  ; 1 = boar, deer; 2 = boar only
(disable-self))

(defrule
(true)
=>
(set-strategic-number sn-percent-civilian-explorers 100)
(set-strategic-number sn-minimum-civilian-explorers 100)
(set-strategic-number sn-cap-civilian-explorers 100)
(set-strategic-number sn-total-number-explorers 101)
(set-strategic-number sn-number-explore-groups 101)
(set-strategic-number sn-minimum-explore-group-size 1)
(set-strategic-number sn-maximum-explore-group-size 1)
(set-strategic-number sn-initial-exploration-required 0)
(set-strategic-number sn-percent-attack-soldiers 100)
(set-strategic-number sn-blot-exploration-map 0)
(set-strategic-number sn-home-exploration-time 0)
(disable-self))

(defrule
(resource-found food)
=>
(set-strategic-number sn-percent-civilian-explorers 0)
(set-strategic-number sn-minimum-civilian-explorers 0)
(set-strategic-number sn-cap-civilian-explorers 0)
(set-strategic-number sn-total-number-explorers 5)
(set-strategic-number sn-number-explore-groups 5)
(disable-self))

(defrule
(unit-type-count-total villager >= 10)
=>
(set-strategic-number sn-minimum-number-hunters 5)
(chat-local-to-self "Go slay the boar!")
(disable-self))

(defrule
(true)
=>
(up-send-scout group-type-land-explore scouting-type)
(enable-timer scouting-timer 5)
(disable-self))

(defrule
(timer-triggered scouting-timer)
(game-time < scout-unlock-time)
(players-building-count every-enemy <= 0)
(military-population >= 1)
=>
(up-send-scout group-type-land-explore scouting-type)
(enable-timer scouting-timer 5));

(defrule
(players-building-count any-enemy > 0)
=>
(set-strategic-number sn-total-number-explorers 1)
(set-strategic-number sn-number-explore-groups 1)
(chat-local-to-self "Dropping extra explorers")
(disable-self))

; ----- Castle, Imperial --------------

(defrule
(or (current-age == castle-age)
    (current-age == imperial-age))
=>
(set-strategic-number sn-cap-civilian-builders 100))

(defrule
(current-age == castle-age)
=>
(set-strategic-number sn-maximum-town-size 30)
(chat-local-to-self "Expand the borders!")
(disable-self))

; -----------------------------------------------------------------------------

; ----- Age Advancement -------------------------------------------------------

(defrule
(goal goal-dark-rush gv-dr-finished)
(can-research feudal-age)
=>
(set-goal goal-age-status gv-advancing-to-feudal)
(research feudal-age)
(chat-local-to-self "Heading to Feudal!"))

(defrule
(current-age == feudal-age)
=>
(set-goal goal-age-status gv-feudal-age)
(disable-self))

(defrule
(can-research castle-age)
=>
(research castle-age)
(set-goal goal-age-status gv-advancing-to-castle)
(chat-local-to-self "Heading to Castle!"))

(defrule
(current-age == castle-age)
=>
(set-goal goal-age-status gv-castle-age)
(disable-self))

(defrule
(can-research imperial-age)
=>
(research imperial-age)
(set-goal goal-age-status gv-advancing-to-imperial)
(chat-local-to-self "Heading to Imperial!!"))

(defrule
(current-age == imperial-age)
=>
(set-goal goal-age-status gv-imperial-age)
(disable-self))

; -----------------------------------------------------------------------------

; ----- Economy ---------------------------------------------------------------

(defrule
(goal goal-age-status gv-dark-age)
=>
; Unit heavy in dark age, prioritize food
(set-strategic-number sn-food-gatherer-percentage 90)
(set-strategic-number sn-wood-gatherer-percentage 10)
(set-strategic-number sn-gold-gatherer-percentage 0)
(set-strategic-number sn-stone-gatherer-percentage 0))

(defrule
(goal goal-age-status gv-advancing-to-feudal)
=>
(set-strategic-number sn-food-gatherer-percentage 30)
(set-strategic-number sn-wood-gatherer-percentage 60)
(set-strategic-number sn-gold-gatherer-percentage 10)
(set-strategic-number sn-stone-gatherer-percentage 0))

(defrule
(goal goal-age-status gv-feudal-age)
(building-type-count-total blacksmith > 0)
(building-type-count-total market > 0)
=>
(set-strategic-number sn-food-gatherer-percentage 35)
(set-strategic-number sn-wood-gatherer-percentage 50)
(set-strategic-number sn-gold-gatherer-percentage 10)
(set-strategic-number sn-stone-gatherer-percentage 5))

(defrule
(or (goal goal-age-status gv-advancing-to-castle)
    (current-age == castle-age))
=>
(set-strategic-number sn-food-gatherer-percentage 35)
(set-strategic-number sn-wood-gatherer-percentage 45)
(set-strategic-number sn-gold-gatherer-percentage 10)
(set-strategic-number sn-stone-gatherer-percentage 10))

(defrule
(current-age == castle-age)
(building-type-count-total town-center > 3)
=>
(set-strategic-number sn-food-gatherer-percentage 60)
(set-strategic-number sn-wood-gatherer-percentage 20)
(set-strategic-number sn-gold-gatherer-percentage 10)
(set-strategic-number sn-stone-gatherer-percentage 10))

(defrule
(current-age == imperial-age)
=>
(set-strategic-number sn-food-gatherer-percentage 50)
(set-strategic-number sn-wood-gatherer-percentage 25)
(set-strategic-number sn-gold-gatherer-percentage 15)
(set-strategic-number sn-stone-gatherer-percentage 10))

; -----------------------------------------------------------------------------

; ----- Dark Age Rush ---------------------------------------------------------

(defrule
(goal goal-dark-rush gv-dr-building)
(unit-type-count-total militiaman-line > start-dark-rush-militia-count)
(not    (players-building-count every-enemy <= 0))
(game-time < 480) ; after 8 min, don't bother
=>
(set-goal goal-dark-rush gv-dr-rushing)
(enable-timer dark-rush-forward-build-timer 1)
(chat-local-to-self "Rushing!"))

(defrule
(timer-triggered dark-rush-forward-build-timer)
=>
(disable-timer dark-rush-forward-build-timer)
(set-goal goal-dark-rush-forward-build gv-drbf-building)
(up-assign-builders c: barracks c: 4)
(chat-local-to-self "Building forward!"))

(defrule
(goal goal-dark-rush-forward-build gv-drbf-building)
(building-type-count-total barracks < max-dark-rush-barracks)
(can-build barracks)
=>
(build-forward barracks))

(defrule
(goal goal-dark-rush-forward-build gv-drbf-building)
(can-build town-center)
=>
(build-forward town-center))

(defrule
(goal goal-dark-rush-forward-build gv-drbf-building)
(building-type-count barracks == max-dark-rush-barracks) ; built
=>
(set-goal goal-dark-rush-forward-build gv-drbf-built)
(up-assign-builders c: barracks c: 1)
(chat-local-to-self "Forward barracks built, continue the rush!"))

(defrule
(goal goal-dark-rush-forward-build gv-drbf-built)
(building-type-count barracks < max-dark-rush-barracks) ; destroyed
=>
(set-goal goal-dark-rush-forward-build gv-drbf-finished)
(chat-local-to-self "Forward barracks destroyed..."))

(defrule
(goal goal-dark-rush gv-dr-building)
(game-time > 480)
=>
(set-goal goal-dark-rush gv-dr-finished)
(chat-local-to-self "Skipping the rush, missed chance."))

(defrule
(goal goal-dark-rush gv-dr-rushing)
(game-time > 600)
(goal goal-dark-rush-forward-build gv-drbf-finished)
=>
(set-goal goal-dark-rush gv-dr-finished)
(chat-local-to-self "Finished rushing 1."))

(defrule
(goal goal-dark-rush gv-dr-rushing)
(game-time > 720)
=>
(set-goal goal-dark-rush gv-dr-finished)
(set-goal goal-dark-rush-forward-build gv-drbf-finished)
(chat-local-to-self "Finished rushing 2."))

(defrule
(goal goal-dark-rush gv-dr-finished)
=>
(set-strategic-number sn-maximum-hunt-drop-distance 15)
; [OFF] (set-strategic-number sn-enable-boar-hunting 0)
(chat-local-to-self "Dropping hunt distance. The boar hunt is over for now.")
(disable-self))

; -----------------------------------------------------------------------------

; ----- Tech ------------------------------------------------------------------

; ----- Dark Age ----------------------
(defrule
(or (food-amount < 50)
    (goal goal-dark-rush-forward-build gv-drbf-building))
(can-research ri-loom)
=>
(research ri-loom)
(chat-local-to-self "Researching loom."))

; ----- Feudal Age --------------------

(defrule
(can-research ri-wheel-barrow)
=>
(research ri-wheel-barrow)
(chat-local-to-self "Researching wheel barrow."))

; ----- Imperial Age ------------------

; reset every rule pass
(defrule
(goal goal-ri-queued-blacksmith gv-yes)
=>
(set-goal goal-ri-queued-blacksmith gv-no))

(defrule
(current-age == imperial-age)
(can-research ri-murder-holes)
=>
(research ri-murder-holes)
(chat-local-to-self "Researching murder holes."))

(defrule
(current-age == imperial-age)
(can-research ri-scale-mail)
(goal goal-ri-queued-blacksmith gv-no)
=>
(research ri-scale-mail)
(set-goal goal-ri-queued-blacksmith gv-yes)
(chat-local-to-self "Researching scale mail armor."))

(defrule
(current-age == imperial-age)
(can-research ri-forging)
(goal goal-ri-queued-blacksmith gv-no)
=>
(research ri-forging)
(set-goal goal-ri-queued-blacksmith gv-yes)
(chat-local-to-self "Researching forging."))

(defrule
(current-age == imperial-age)
(can-research ri-pikeman)
=>
(research ri-pikeman)
(chat-local-to-self "Researching pikeman."))

(defrule
(current-age == imperial-age)
(can-research ri-chain-mail)
(goal goal-ri-queued-blacksmith gv-no)
=>
(research ri-chain-mail)
(set-goal goal-ri-queued-blacksmith gv-yes)
(chat-local-to-self "Researching chain mail armor."))

(defrule
(current-age == imperial-age)
(can-research ri-iron-casting)
(goal goal-ri-queued-blacksmith gv-no)
=>
(research ri-iron-casting)
(set-goal goal-ri-queued-blacksmith gv-yes)
(chat-local-to-self "Researching iron casting."))

(defrule
(current-age == imperial-age)
(can-research ri-tracking)
=>
(research ri-tracking)
(chat-local-to-self "Researching tracking."))

(defrule
(current-age == imperial-age)
(can-research ri-squires)
=>
(research ri-squires)
(chat-local-to-self "Researching squires."))

(defrule
(current-age == imperial-age)
(can-research ri-halberdier)
=>
(research ri-halberdier)
(chat-local-to-self "Researching halbardier."))

(defrule
(current-age == imperial-age)
(can-research ri-arson)
=>
(research ri-arson)
(chat-local-to-self "Researching arson."))

(defrule
(current-age == imperial-age)
(can-research ri-conscription)
=>
(research ri-conscription)
(chat-local-to-self "Researching conscription."))

(defrule
(current-age == imperial-age)
(can-research ri-blast-furnace)
(goal goal-ri-queued-blacksmith gv-no)
=>
(research ri-blast-furnace)
(set-goal goal-ri-queued-blacksmith gv-yes)
(chat-local-to-self "Researching blast furnace."))

(defrule
(current-age == imperial-age)
(can-research ri-plate-mail)
(goal goal-ri-queued-blacksmith gv-no)
=>
(research ri-plate-mail)
(set-goal goal-ri-queued-blacksmith gv-yes)
(chat-local-to-self "Researching plate mail."))

; -----------------------------------------------------------------------------

; ----- Buildings -------------------------------------------------------------

(defrule
(or (goal goal-dark-rush gv-dr-building)
    (goal goal-dark-rush gv-dr-rushing))
(can-build house)
(housing-headroom < 7)
(population-headroom > 3)
(up-pending-objects c: house < 1) ; this rule will queue otherwise
=>
(build house)
(chat-local-to-self "House rule 1"))

(defrule
(goal goal-dark-rush gv-dr-finished)
(can-build house)
(housing-headroom < 4)
(population-headroom > 3)
(up-pending-objects c: house < 1)
=>
(build house)
(chat-local-to-self "House rule 2"))

; ASAP
(defrule
(building-type-count-total barracks < 1)
(can-build barracks)
=>
(build barracks)
(chat-local-to-self "Barracks rule 1"))

(defrule
(building-type-count-total house > 0)
(building-type-count-total mill == 0)
(resource-found food)
(can-build mill)
=>
(build mill))

(defrule
(building-type-count-total mill > 0)
(building-type-count-total lumber-camp == 0)
(resource-found wood)
(can-build lumber-camp)
=>
(build lumber-camp))

(defrule
(or (goal goal-age-status gv-dark-age)
    (goal goal-age-status gv-advancing-to-feudal))
(goal goal-dark-rush gv-dr-finished)
(idle-farm-count == 0)
(can-build farm)
(up-pending-objects c: farm < 1)
=>
(build farm)
(chat-local-to-self "Farm rule 1"))

(defrule
(current-age > dark-age)
(idle-farm-count == 0)
(up-pending-objects c: farm < 1)
(can-build farm)
=>
(build farm)
(chat-local-to-self "Farm rule 2"))

(defrule
(building-type-count-total lumber-camp > 0)
(strategic-number sn-camp-max-distance < 35)
=>
(set-strategic-number sn-camp-max-distance 35)
(chat-local-to-self "Camp distance 35.")
(disable-self))

(defrule
(or (current-age > dark-age)
    (goal goal-age-status gv-advancing-to-feudal))
(resource-found gold)
(building-type-count mining-camp < 4)
(cc-players-unit-type-count 0 66 > 0)
(dropsite-min-distance gold > 5)
(dropsite-min-distance gold < 255)
(up-pending-objects c: mining-camp < 1)
(can-build mining-camp)
=>
(build mining-camp))

; ----- Feudal ------------------------

(defrule
(current-age >= feudal-age)
(building-type-count-total blacksmith < 1)
(can-build blacksmith)
=>
(build blacksmith))

(defrule
(current-age == feudal-age)
(building-type-count-total market < 1)
(can-build market)
=>
(build market))

(defrule
(current-age >= feudal-age)
(building-type-count-total blacksmith > 0)
(building-type-count-total market > 0)
(resource-found stone)
(dropsite-min-distance stone > 5)
(dropsite-min-distance stone < 255)
(building-type-count mining-camp < 4)
(can-build mining-camp)
(up-pending-objects c: mining-camp < 1)
=>
(build mining-camp))

; ----- Castle ------------------------

(defrule
(can-build castle)
(building-type-count town-center >= 3)
(building-type-count-total castle < 2)
=>
(build castle)
(chat-local-to-self "Castle rule 1"))

(defrule
(building-type-count-total town-center < 6)
(can-build town-center)
=>
(build town-center)
(chat-local-to-self "Town center rule 1"))

(defrule
(or (current-age == castle-age)
    (current-age == imperial-age))
(building-type-count town-center >= 3)
(can-build house)
(housing-headroom < 20)
(population-headroom > 3)
(up-pending-objects c: house < 2)
=>
(build house)
(chat-local-to-self "House rule 3"))

(defrule
(civilian-population > 100)
(building-type-count-total town-center >= 3)
(building-type-count-total farm < 60)
(can-build farm)
=>
(build farm)
(chat-local-to-self "Farm rule 3"))

; ----- Imperial ----------------------

(defrule
(current-age == imperial-age)
(building-type-count-total university < 1)
(can-build university)
=>
(build university)
(chat-local-to-self "University rule 1"))

(defrule
(goal goal-flood-spearmen gv-yes)
(building-type-count-total barracks < 10)
(can-build barracks)
=>
(build barracks)
(chat-local-to-self "Barracks rule 2"))

(defrule
(current-age == imperial-age)
(building-type-count-total siege-workshop < 2)
(can-build siege-workshop)
=>
(build siege-workshop)
(chat-local-to-self "Siege workshop rule 1"))

; [OFF] currently broken
;(defrule
;(current-age == imperial-age)
;(building-type-count-total castle >= 2)
;(goal goal-army-status gv-army-status-attacking)
;(can-build castle)
;=>
;(build-forward castle)
;(chat-local-to-self "Castle rule 2 (forward)"))

(defrule
(current-age == imperial-age)
=>
(set-strategic-number sn-camp-max-distance 360)
(disable-self)
(chat-local-to-self "Camp distance: 360"))

(defrule
(building-type-count farm > 15)
(building-type-count-total mill < 2)
(can-build mill)
=>
(build mill)
(chat-local-to-self "Mill rule 2"))

(defrule
(building-type-count farm > 25)
(building-type-count-total mill < 3)
(can-build mill)
=>
(build mill)
(chat-local-to-self "Mill rule 3"))

(defrule
(building-type-count farm > 30)
(building-type-count-total mill < 4)
(can-build mill)
=>
(build mill)
(chat-local-to-self "Mill rule 4"))

; -----------------------------------------------------------------------------

; ----- Unit training ---------------------------------------------------------

(defrule
(current-age == dark-age)
(unit-type-count-total villager < max-num-dark-villagers)
(can-train villager)
=>
(train villager))

; constantly train villagers
(defrule
(not (current-age == dark-age))
(civilian-population < 200)
(can-train villager)
=>
(train villager))

(defrule
(or (goal goal-dark-rush gv-dr-building)
    (goal goal-dark-rush gv-dr-rushing))
(unit-type-count-total militiaman-line >= end-dark-rush-militia-count)
=>
(set-goal goal-max-militia-reached gv-yes)
(chat-local-to-self "Done training rush militia.")
(disable-self))

(defrule
(or (goal goal-dark-rush gv-dr-building)
    (goal goal-dark-rush gv-dr-rushing))
(goal goal-max-militia-reached gv-no)
(can-train militiaman-line)
=>
(train militiaman-line))

(defrule
(goal goal-dark-rush-forward-build gv-drbf-built)
(can-train militiaman-line)
=>
(train militiaman-line))

; -------------------------------------

(defrule
(current-age == imperial-age)
(civilian-population > 80)
(goal goal-army-composition gv-army-comp-defensive)
(goal goal-army-status gv-army-status-idle)
=>
(set-goal goal-army-composition gv-army-comp-offensive)
(chat-local-to-self "Building an attack force"))

(defrule
(goal goal-army-composition gv-army-comp-offensive)
(goal goal-army-status gv-army-status-defending)
=>
(set-goal goal-army-composition gv-army-comp-defensive)
(chat-local-to-self "Reverting to defensive focus"))

(defrule
(goal goal-army-composition gv-army-comp-offensive)
=>
(set-goal goal-flood-spearmen gv-yes))

(defrule
(goal goal-flood-spearmen gv-yes)
(can-train spearman-line)
=>
(train spearman-line))

(defrule
(goal goal-army-composition gv-army-comp-offensive)
(unit-type-count-total battering-ram-line < 10)
(can-train battering-ram-line)
=>
(train battering-ram-line))

; -----------------------------------------------------------------------------

; ----- Attack rules ----------------------------------------------------------

; ----- Dark Age Rush -----------------

; re-issue the attack now call every minute

(defrule
(goal goal-dark-rush gv-dr-rushing)
=>
(enable-timer dark-rush-timer 1)
(disable-self))

(defrule
(timer-triggered dark-rush-timer)
(goal goal-dark-rush gv-dr-rushing)
=>
(attack-now)
(disable-timer dark-rush-timer)
(enable-timer dark-rush-timer 60)
(chat-local-to-self "Attack now!"))

; -------------------------------------

(defrule
(current-age == imperial-age)
(unit-type-count-total spearman-line > 50)
(unit-type-count-total battering-ram-line > 3)
(goal goal-army-status gv-army-status-idle)
=>
(set-goal goal-army-status gv-army-status-attacking)
(set-goal goal-tsa gv-yes)
(set-strategic-number sn-enemy-sighted-response-distance 2)
(chat-local-to-self "Begin the siege!"))

(defrule
(goal goal-tsa gv-yes)
(not(enemy-buildings-in-town))
=>
(up-modify-sn sn-maximum-town-size c:+ 2)
(up-chat-data-to-self "town size: %d" s: sn-maximum-town-size))

(defrule
(goal goal-tsa gv-yes)
(enemy-buildings-in-town)
=>
(set-goal goal-tsa gv-no)
(chat-local-to-self "Maxed out TSA. Attack!"))

(defrule
(goal goal-tsa gv-no)
(not (enemy-buildings-in-town))
(goal goal-army-status gv-army-status-attacking)
=>
(set-goal goal-tsa gv-yes)
(chat-local-to-self "Press further!"))

(defrule
;(or (military-population < 20)
;    (town-under-attack)) ;; this resets the TSA too early
(military-population < 20)
(goal goal-army-status gv-army-status-attacking)
=>
(up-retreat-now)
(set-goal goal-tsa gv-no)
(set-goal goal-army-status gv-army-status-defending)
(set-strategic-number sn-maximum-town-size 30)
(chat-local-to-self "Fall back!")
(up-chat-data-to-self "town size: %d" s: sn-maximum-town-size))

; -----------------------------------------------------------------------------

; ----- Defend rules ----------------------------------------------------------

(defrule
(not (town-under-attack))
(not (enemy-buildings-in-town))
(goal goal-army-status gv-army-status-defending)
=>
(set-goal goal-flood-spearmen gv-no)
(set-goal goal-army-status gv-army-status-idle)
(set-strategic-number sn-enemy-sighted-response-distance 25)
(chat-local-to-self "Army is now idle"))

(defrule
(or (current-age == castle-age)
    (current-age == imperial-age))
(town-under-attack)
(goal goal-army-status gv-army-status-idle)
=>
(set-goal goal-army-status gv-army-status-defending)
(set-goal goal-flood-spearmen gv-yes)
(set-strategic-number sn-enemy-sighted-response-distance 144)
(enable-timer generic-defend-timer 30)
(chat-local-to-self "We're under attack!"))

(defrule
(timer-triggered generic-defend-timer)
(not (town-under-attack))
=>
(disable-timer generic-defend-timer)
(chat-local-to-self "No longer under attack"))

(defrule
(timer-triggered generic-defend-timer)
(town-under-attack)
=>
(disable-timer generic-defend-timer)
(enable-timer generic-defend-timer 30)
(chat-local-to-self "Still under attack"))

; -----------------------------------------------------------------------------

; ----- Town Size -------------------------------------------------------------

(defrule
(current-age == imperial-age)
=>
(enable-timer increase-town-size-timer 1)
(disable-self))

(defrule
(timer-triggered increase-town-size-timer)
(strategic-number sn-maximum-town-size < max-town-size)
=>
(up-modify-sn sn-maximum-town-size c:+ 2)
(disable-timer increase-town-size-timer)
(enable-timer increase-town-size-timer 30)
(up-chat-data-to-self "town size: %d" s: sn-maximum-town-size))

(defrule
(timer-triggered increase-town-size-timer)
(strategic-number sn-maximum-town-size >= max-town-size)
=>
(disable-timer increase-town-size-timer))

(defrule
(current-age == castle-age)
(civilian-population > 100)
=>
(up-modify-sn sn-maximum-town-size c:+ 20)
(disable-self))

; -----------------------------------------------------------------------------
